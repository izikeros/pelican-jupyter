[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.setuptools_scm]
write_to = "pelican_jupyter/_generated_version.py"

[tool.pytest.ini_options]
norecursedirs = ".git,dist,build,env,venv"
addopts = "pelican_jupyter/tests -s -vv --cov-config=pyproject.toml --cov=pelican_jupyter --cov-report term-missing"
markers = []

[tool.coverage.run]
parallel = true
branch = true

[tool.coverage.report]
omit = ["pelican_jupyter/_generated_version.py", "pelican_jupyter/vendor/*", "pelican_jupyter/tests/*"]

[tool.black]
target-version = ["py37", "py38"]
exclude = '''
(
    asv_bench/env
  | \.egg
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | _generated_version.py
)
'''

[tool.isort]
# https://black.readthedocs.io/en/stable/the_black_code_style.html#how-black-wraps-lines
multi_line_output = 3
lines_after_imports = 2
force_grid_wrap = 0
include_trailing_comma = "true"
use_parentheses = "true"
line_length = 88
profile = "black"

[project]
name = "pelican-jupyter"
version = "1.10.2"
dependencies = [
    "pelican",
    "nbconvert",
    "markdown",
    "jinja2",
    "nbformat",
]
requires-python = ">=3.11"

[dependency-groups]
dev = [
    "setuptools",
    "setuptools-scm",
    "pylint",
    "flake8",
    "black",
    "isort==5.5.4",
    "twine",
    "wheel",
    "pytest>=8.3.5",
    "pytest-cov",
    "nbconvert",
    "markdown",
    "notebook",
    "jupyterlab",
    "pelican",
    "pelican-jupyter @ file:///${PROJECT_ROOT}/",
]
